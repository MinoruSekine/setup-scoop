---

name: Edge case

on:
  pull_request:
  push:
    branches:
      - main
  schedule:
    - cron: 0 20 * * *
  workflow_dispatch:
    inputs:
      targetVersion:
        description: 'Workflow target'
        required: true
        default: 'main'
        type: choice
        options:
          - main
          - v4.0.2

jobs:
  # `apps` parameters tests.
  injection_attack_prevention:
    strategy:
      matrix:
        os: [windows-2025, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - if: github.event_name == 'pull_request'
        uses: actions/checkout@v4

      - if: github.event_name == 'pull_request'
        name: Run actions locally
        uses: ./
        with:
          apps: -foobar
        continue-on-error: true

      - if: >
          (github.event_name == 'push')
          || (github.event_name == 'workflow_dispatch'
              && github.event.inputs.targetVersion == 'main')
        uses: MinoruSekine/setup-scoop@main
        with:
          buckets: extras
          apps: -foobar
        continue-on-error: true

      - if: >
          (github.event_name == 'schedule')
          || (github.event_name == 'workflow_dispatch'
              && github.event.inputs.targetVersion == 'v4.0.2')
        uses: MinoruSekine/setup-scoop@v4.0.2
        with:
          buckets: extras
          apps: -foobar
        continue-on-error: true

  # `buckets` parameter tests.
  illegal_bucket_name:
    strategy:
      matrix:
        os: [windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - if: github.event_name == 'pull_request'
        uses: actions/checkout@v4

      - if: github.event_name == 'pull_request'
        name: Run actions locally
        uses: ./
        with:
          buckets: java -add
        continue-on-error: true

      - if: >
          (github.event_name == 'push')
          || (github.event_name == 'workflow_dispatch'
              && github.event.inputs.targetVersion == 'main')
        uses: MinoruSekine/setup-scoop@main
        with:
          buckets: java -add
        continue-on-error: true

      - if: >
          (github.event_name == 'schedule')
          || (github.event_name == 'workflow_dispatch'
              && github.event.inputs.targetVersion == 'v4.0.2')
        uses: MinoruSekine/setup-scoop@v4.0.2
        with:
          buckets: java -add
        continue-on-error: true

  refuse_unknown_bucket:
    strategy:
      matrix:
        os: [windows-2025, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - if: github.event_name == 'pull_request'
        uses: actions/checkout@v4

      - if: github.event_name == 'pull_request'
        name: Run actions locally
        uses: ./
        with:
          buckets: unknown
        continue-on-error: true


      - if: >
          (github.event_name == 'push')
          || (github.event_name == 'workflow_dispatch'
              && github.event.inputs.targetVersion == 'main')
        uses: MinoruSekine/setup-scoop@main
        with:
          buckets: unknown
        continue-on-error: true

      - if: >
          (github.event_name == 'schedule')
          || (github.event_name == 'workflow_dispatch'
              && github.event.inputs.targetVersion == 'v4.0.2')
        uses: MinoruSekine/setup-scoop@v4.0.2
        with:
          buckets: unknown
        continue-on-error: true

  # `run_as_admin` tests.
  GitHub_default_runner_without_RunAsAdmin:
    strategy:
      matrix:
        os: [windows-2025, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - if: github.event_name == 'pull_request'
        uses: actions/checkout@v4

      - if: github.event_name == 'pull_request'
        name: Run actions locally
        uses: ./
        with:
          run_as_admin: false
        continue-on-error: true

      - if: >
          (github.event_name == 'push')
          || (github.event_name == 'workflow_dispatch'
              && github.event.inputs.targetVersion == 'main')
        uses: MinoruSekine/setup-scoop@main
        with:
          run_as_admin: false
        continue-on-error: true

      - if: >
          (github.event_name == 'schedule')
          || (github.event_name == 'workflow_dispatch'
              && github.event.inputs.targetVersion == 'v4.0.2')
        uses: MinoruSekine/setup-scoop@v4.0.2
        with:
          run_as_admin: false
        continue-on-error: true

  # Obsoleted parameters tests.
  add_extras_bucket:
    strategy:
      matrix:
        os: [windows-2025, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - if: github.event_name == 'pull_request'
        uses: actions/checkout@v4

      - if: github.event_name == 'pull_request'
        name: Run actions locally
        uses: ./
        with:
          add_extras_bucket: 'true'
        continue-on-error: true

      - if: >
          (github.event_name == 'push')
          || (github.event_name == 'workflow_dispatch'
              && github.event.inputs.targetVersion == 'main')
        uses: MinoruSekine/setup-scoop@main
        with:
          add_extras_bucket: 'true'
        continue-on-error: true

      - if: >
          (github.event_name == 'schedule')
          || (github.event_name == 'workflow_dispatch'
              && github.event.inputs.targetVersion == 'v4.0.2')
        uses: MinoruSekine/setup-scoop@v4.0.2
        with:
          add_extras_bucket: 'true'
        continue-on-error: true

      - name: Validate extras bucket is not available
        shell: pwsh
        run: |
          if([bool](scoop bucket list | Select-String -Quiet "extras")) {
            Write-Error "Unexepected extras bucket found." -ErrorAction Stop
          }

  add_nonportable_bucket:
    strategy:
      matrix:
        os: [windows-2025, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - if: github.event_name == 'pull_request'
        uses: actions/checkout@v4

      - if: github.event_name == 'pull_request'
        name: Run actions locally
        uses: ./
        with:
          add_nonportable_bucket: 'true'
        continue-on-error: true

      - if: >
          (github.event_name == 'push')
          || (github.event_name == 'workflow_dispatch'
              && github.event.inputs.targetVersion == 'main')
        uses: MinoruSekine/setup-scoop@main
        with:
          add_nonportable_bucket: 'true'
        continue-on-error: true

      - if: >
          (github.event_name == 'schedule')
          || (github.event_name == 'workflow_dispatch'
              && github.event.inputs.targetVersion == 'v4.0.2')
        uses: MinoruSekine/setup-scoop@v4.0.2
        with:
          add_nonportable_bucket: 'true'
        continue-on-error: true

      - name: Validate nonportable bucket is not available
        shell: pwsh
        run: |
          if([bool](scoop bucket list | Select-String -Quiet "nonportable")) {
            Write-Error "Unexpected nonportable bucket found." -ErrorAction Stop
          }
